apiVersion: batch/v1
kind: Job
metadata:
  name: '{{ .Release.Name }}-dns'
  namespace: '{{ .Release.Namespace }}'
  annotations:
    helm.sh/hook: post-install, post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  completionMode: NonIndexed
  backoffLimit: 1
  completions: 1
  parallelism: 1
  suspend: false
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      annotations:
        azure.workload.identity/inject-proxy-sidecar: true
        azure.workload.identity/proxy-sidecar-port: 8080
    spec:
      serviceAccountName: '{{ .Release.Name }}-dns'
      automountServiceAccountToken: true
      containers:
      - name: azure-cli
        image: mcr.microsoft.com/azure-cli:latest
        env:
          - name: CLUSTER_NAME
            value: '{{ .Values.clusterName }}'
          - name: CLUSTER_DOMAIN
            value: '{{ .Values.dnsZoneName }}'
          - name: RESOURCE_GROUP
            value: '{{ .Values.dnsZoneResourceGroup }}'
        command:
          - sh
          - -c
          - |
            #!/usr/bin/env bash

            # Setup kubectl cli
            az aks install-cli

            # Get IP address of the nginx loadbalancer service
            Response=$(kubectl --token="$(cat /run/secrets/kubernetes.io/serviceaccount/token)" get --raw='/api/v1/namespaces/ingress-nginx/services')
            LB_IP=$(echo "$Response" | jq -r '.items[]|select(.spec.type == "LoadBalancer").status.loadBalancer.ingress[].ip')

            # Get all A records from the A record set for the cluster domain
            EXISTING_A_RECORDS=$(az network dns record-set a show -z "$CLUSTER_DOMAIN" -g "$RESOURCE_GROUP" -n "$CLUSTER_NAME" --query aRecords --output tsv || echo)

            # Remove outdated/manually added records
            for A_RECORD in $EXISTING_A_RECORDS; do
                if [ "$A_RECORD" != "$LB_IP" ]; then
                    echo az network dns record-set a remove-record -z "$CLUSTER_DOMAIN" -g "$RESOURCE_GROUP" -n "$CLUSTER_NAME" -a "$A_RECORD"
                fi
            done

            # Add new record to the DNS zone
            echo az network dns record-set a add-record -z "$CLUSTER_DOMAIN" -g "$RESOURCE_GROUP" -n "$CLUSTER_NAME" -a "$LB_IP"
      restartPolicy: Never
